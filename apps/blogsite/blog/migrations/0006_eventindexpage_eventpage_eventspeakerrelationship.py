# Generated by Django 4.2.4 on 2023-08-07 16:02

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.fields
import re
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0012_people_description_alter_homepage_hero_cta_and_more'),
        ('blog', '0005_alter_blogpage_body'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventIndexPage',
            fields=[
                ('blogindexpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.blogindexpage')),
            ],
            options={
                'abstract': False,
            },
            bases=('blog.blogindexpage',),
        ),
        migrations.CreateModel(
            name='EventPage',
            fields=[
                ('blogpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.blogpage')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='start date')),
                ('end_date', models.DateTimeField(default=datetime.datetime(2023, 8, 7, 18, 2, 18, 887210, tzinfo=datetime.timezone.utc), verbose_name='end date')),
                ('location', models.TextField(blank=True, verbose_name='location')),
                ('min_participants', models.IntegerField(blank=True, null=True, verbose_name='minimum number of participants')),
                ('max_participants', models.IntegerField(blank=True, null=True, verbose_name='maximum number of participants')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Price')),
                ('price_reduced', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='reduced Price')),
                ('is_registration_open', models.BooleanField(default=True, verbose_name='is registration open')),
                ('registration_end_date', models.DateTimeField(blank=True, null=True, verbose_name='end date for registration')),
                ('registration_email', models.EmailField(blank=True, max_length=254, verbose_name='email address for registration')),
                ('registration_phone_number', models.CharField(blank=True, max_length=30, validators=[django.core.validators.RegexValidator(re.compile('^\\+\\d{1,3}((-?\\d+)|(\\s?\\(\\d+\\)\\s?)|\\s?\\d+){1,9}$'), 'Enter a valid phone number i.e. +49 (531) 123456', 'invalid')], verbose_name='phone number for registration')),
                ('is_booked_up', models.BooleanField(default=False, verbose_name='is booked up')),
                ('additional_infos', wagtail.fields.RichTextField(blank=True, help_text="Write additional information's", null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('blog.blogpage',),
        ),
        migrations.CreateModel(
            name='EventSpeakerRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_speaker_relationship', to='blog.eventpage')),
                ('speaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_speaker_relationship', to='base.speaker')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
